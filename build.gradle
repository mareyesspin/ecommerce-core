



plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '2.7.1'
    id 'org.sonarqube' version '3.2.0'
    id 'maven-publish'
    //id 'checkstyle'
}


apply from: "${rootDir}/gradle/dependencies.gradle"
//apply from: "${rootDir}/gradle/checkstyle.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8



ext {
    lineCoverage = 0.00
    branchCoverage = 0.01
    coverageExclude = [
    ]
}



repositories {
    mavenLocal()
    mavenCentral()
}

task sourceJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

tasks.withType(JavaCompile) {
    configure(options) {
        options.compilerArgs << '-Xlint:-processing' << '-Xlint:-serial' << '-Xlint:all'
        options.deprecation = true
    }
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}

configurations.all {
    exclude group: 'org.bouncycastle', module: 'bcprov-jdk15on'
    exclude group: 'org.aspectj', module: 'aspectjweaver'



    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'com.squareup.okio' && details.requested.name == 'okio' && details.requested.version == '2.8.0') {
            details.useVersion '3.4.0'
            details.because 'fixes Denial of Service (DoS) bug in 2.8.0'
        }
        if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.name == 'jackson-databind' && details.requested.version == '2.13.3') {
            details.useVersion '2.13.4'
            details.because 'fixes Denial of Service (DoS) bug in 2.13.3'
        }
        if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-expression' && details.requested.version == '5.3.26') {
            details.useVersion '5.3.27'
            details.because 'fixes Allocation of Resources Without Limits or Throttling bug in 2.13.3'
        }
        if (details.requested.group == 'com.squareup.okio' && details.requested.name == 'okio' && details.requested.version == '3.2.0') {
            details.useVersion '3.4.0'
            details.because 'fixes Denial of Service (DoS) bug in 2.8.0'
        }
        if (details.requested.group == 'org.yaml' && details.requested.name == 'snakeyaml' && details.requested.version == '1.30') {
            details.useVersion '2.0'
            details.because 'fixes Arbitrary Code Execution bug in 1.30'
        }
        if (details.requested.group == 'org.springframework' && details.requested.name == 'spring-webmvc' && details.requested.version == '5.3.21') {
            details.useVersion '5.3.26'
            details.because 'fixes Improper Access Control bug in 5.3.21'
        }
        if (details.requested.group == 'com.fasterxml.jackson.core' && details.requested.name == 'jackson-databind') {
            details.useVersion '2.12.7.1'
            details.because 'fixes Improper Access Control bug'
        }
    }



}

sourceSets {
    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
        java {
            srcDirs = ['src/test/java']
        }
    }
}

test { // only needed if doing 'gradle test'
    useJUnitPlatform()
}

compileJava {
    doLast {
        copy {
            from "$buildDir/../../scripts"
            into "$buildDir/tmp/scripts/"
        }
        println project.version.toString()
    }
}

compileTestGroovy.enabled = false

clean {
    delete "out"
    delete "src/main/generated"
    delete "src/main/groovy/generated"
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/fintechdigitalventure/spei-core")
            credentials {
                username = project.findProperty("package.user") ?: System.getenv("PACKAGE_USERNAME")
                password = project.findProperty("package.token") ?: System.getenv("PACKAGE_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            artifact tasks.sourceJar
        }
    }
}

